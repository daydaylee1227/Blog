import React, { Component } from 'react'
import PropTypes from 'prop-types'
import FormControl from '@material-ui/core/FormControl'

import lcloneDeep from 'lodash/cloneDeep'
import InputLabel from '@material-ui/core/InputLabel'
import MenuItem from '@material-ui/core/MenuItem'
import Select from '@material-ui/core/Select'
const STYLES = {
    container: {
        paddingLeft: 20,
        marginTop: 10,
    },
    inputStyle: {
        width: 150,
        marginLeft: 20,
        marginTop: 10,
    }
}

export default class InterestEnumeration2Question extends Component {
    static propTypes = {
        questionData: PropTypes.array.isRequired,
        onDataChange: PropTypes.func.isRequired,
    }
    _questionMarkCount = [1, 2, 3, 4, 5, 6, 7, 8, 9]
    commonStyle = {
        inputLabel: {
            marginBottom:10,
        },
        formControl: {
            minWidth: 230
        },
        select: {
            margin:20
        },
        ShowStyle: {
            display: 'none'
        },
        fixStyle: {
            minWidth: 300,
            marginLeft: 100,
            marginTop: 100
        },
        layout: {
            marginBottom: 100
        }
    }
    constructor(...args) {
        super(...args)
        const {
            props: {
                questionData,
            },
        } = this
        const propsData = this._getPropsData(questionData)
        this._imageList = [0].concat(propsData.data.imageList)
        this._layout = propsData.data.layout
        this._adjoinNumber = propsData.data.adjoinNumber
        this._fixedNumber = propsData.data.fixedNumber
        this._imageContentList = ['粉色圆形曲奇','蓝色三角形曲奇','绿色星星曲奇', '黄色方形曲奇', '黄色六边形曲奇', 
                                    '蓝色圆形曲奇', '黄色三角形曲奇','黄色星星曲奇', '绿色方形曲奇', '粉色六边形曲奇']
        this.state = {
            ...this.state,
            imageList: propsData.data.imageList,
            layout: propsData.data.layout,
            fixedNumber: propsData.data.fixedNumber,
            adjoinNumber: propsData.data.adjoinNumber
        }
    }
    
    _getPropsData(questionData) {
        let data = ''
        questionData.forEach(block => {
            if (block.type.includes('Question')) {
                data = block
            }
        })
        return data
    }
    _renderInput() {
        const {
            _questionMarkCount,
            _imageList,
            commonStyle,
            _fixedNumber,
            _adjoinNumber,
        } = this
        const number = this._layout === 2 ? '三' : '四'
        const arrTemp = this._layout === 3 ? [1, 2, 3, 4] : [2, 3]
        return (
            
            
            <div style = {STYLES.container}>
                <FormControl style = {commonStyle.formControl}>
                    <InputLabel id="demo-simple-select-label-11">选择题版类型</InputLabel>
                    <Select
                        labelid="demo-simple-select-label-11"
                        id="demo-simple-select-11"
                        value={this._layout}
                        onChange={this._handleChangeLayout.bind(this)}
                        style = {commonStyle.layout}
                    >
                        {
                            
                            [2, 3, 4].map((ell, index) => {
                                return (
                                    <MenuItem value={ell} key = {index}>{ell}</MenuItem>
                                )
                            })
                        }
                    </Select>
                </FormControl>
                <h4>选择图片的序号,{number}个序号不能相同</h4>
                <FormControl style = {commonStyle.formControl}>
                    <InputLabel id="demo-simple-select-label-1">第一个图片序号</InputLabel>
                    <Select
                        labelid="demo-simple-select-label-1"
                        id="demo-simple-select-1"
                        value={_imageList[1]}
                        onChange={this._handleChange.bind(this, 1)}
                        style = {commonStyle.select}
                    >
                        {
                            _questionMarkCount.map((_, index) => {
                                return (
                                    <MenuItem value={index+1} key = {index}>{index+1}</MenuItem>
                                )
                            })
                        }
                    </Select>
                </FormControl>
                <FormControl style = {commonStyle.formControl}>
                    <InputLabel id="demo-simple-select-label-2">第二个图片序号</InputLabel>
                    <Select
                        labelid="demo-simple-select-label-2"
                        id="demo-simple-select-2"
                        value={_imageList[2]}
                        onChange={this._handleChange.bind(this, 2)}
                        style = {commonStyle.select}
                    >
                        {
                            _questionMarkCount.map((_, index) => {
                                return (
                                    <MenuItem value={index+1} key = {index}>{index+1}</MenuItem>
                                )
                            })
                        }
                    </Select>
                </FormControl>

                <FormControl style = {commonStyle.formControl}>
                    <InputLabel id="demo-simple-select-label-3">第三个图片序号</InputLabel>
                    <Select
                        labelid="demo-simple-select-label-3"
                        id="demo-simple-select-3"
                        value={_imageList[3]}
                        onChange={this._handleChange.bind(this, 3)}
                        style = {commonStyle.select}
                    >
                        {
                            _questionMarkCount.map((_, index) => {
                                return (
                                    <MenuItem value={index+1} key = {index}>{index+1}</MenuItem>
                                )
                            })
                        }
                    </Select>
                </FormControl>
                
                <FormControl style = {this._layout !== 2 ? commonStyle.formControl : {display:'none'}} >
                    <InputLabel id="demo-simple-select-label-4" >第四个图片序号</InputLabel>
                    <Select
                        labelid="demo-simple-select-label-4"
                        id="demo-simple-select-4"
                        value={_imageList[4]}
                        onChange={this._handleChange.bind(this, 4)}
                        style = {commonStyle.select}
                    >
                        {
                            _questionMarkCount.map((_, index) => {
                                return (
                                    <MenuItem value={index+1} key = {index}>{index+1}</MenuItem>
                                )
                            })
                        }
                    </Select>
                </FormControl>

                <FormControl style = {(this._layout === 3 || this._layout === 4) ? commonStyle.formControl : {display:'none'}} >
                    <InputLabel id="demo-simple-select-label-5"  >选择{this._imageContentList[_imageList[4]]}固定位置</InputLabel>
                    <Select
                        labelid="demo-simple-select-label-5"
                        id="demo-simple-select-5"
                        value={_fixedNumber}
                        onChange={this._handleChangeFix.bind(this)}
                        style = {commonStyle.select}
                    >
                        {
                            arrTemp.map((el, index) => {
                                return (
                                    <MenuItem value={el} key = {index}>{el}</MenuItem>
                                )
                            })
                        }
                    </Select>
                </FormControl>
                <FormControl style = {this._layout === 4 ? commonStyle.formControl : {display:'none'}} >
                    <InputLabel id="demo-simple-select-label-6"  >选择{this._imageContentList[_imageList[4]]}旁边的元素</InputLabel>
                    <Select
                        labelid="demo-simple-select-label-6"
                        id="demo-simple-select-6"
                        value={_adjoinNumber}
                        onChange={this._handleChangeAdjoin.bind(this)}
                        style = {commonStyle.select}
                    >
                        {
                            [1,2,3].map((el, index) => {
                                return (
                                    <MenuItem value={el} key = {index}>{this._imageContentList[_imageList[index+1]]}</MenuItem>
                                )
                            })
                        }
                    </Select>
                </FormControl>
            </div>
        )
    }
    _handleChangeLayout(e) {
        const numberTemp = e.target.value
        this._layout = numberTemp
        this.setState({
            layout: numberTemp
        },() => {
            this._updQuestionData()
        })
    }
    _handleChangeAdjoin(e) {
        const numberTemp = e.target.value
        this._adjoinNumber = numberTemp
        this.setState({
            adjoinNumber: numberTemp
        },() => {
            this._updQuestionData()
        })
    }
    _handleChangeFix(e) {
        const numberTemp = e.target.value
        this._fixedNumber = numberTemp
        this.setState({
            fixedNumber: numberTemp
        },() => {
            this._updQuestionData()
        })
    }
    _handleChange(index, e) {
        const {
            _imageList,
            state: {
                imageList,
                layout
            }
        } = this
        const imageTemp = lcloneDeep(imageList)
        const count = e.target.value
        let flag = false
        for (let i = 0; i < imageTemp.length; i++) {
            if(layout === 2 && i === 3) break
            if( imageTemp[i] === Number(count) && i !== (index - 1)) {
                flag = true
            }
        }
        if(flag) {
            alert('图片的序号不能相同')
            return 
        } else {
            _imageList[index] = Number(count)
            imageTemp[index-1] = Number(count) 
            this.setState({
                imageList:imageTemp
            }, () => {
                this._updQuestionData()
            })
        }
    }
   
    _updQuestionData() {
        const {
            props: {
                questionData,
                onDataChange,
            },  
            state: {
                imageList,
                layout,
                fixedNumber,
                adjoinNumber
            },
        } = this
        let questionDataUpd = lcloneDeep(questionData)
        questionDataUpd.forEach(block => {
            if (block.type.includes('Question')) {
                block.data.imageList = imageList
                block.data.layout = layout
                block.data.fixedNumber = fixedNumber
                block.data.adjoinNumber = adjoinNumber
            }
        })
        onDataChange(questionDataUpd)
    }

    render() {
        return (
            <div>
                {/* 123123 */}
                {this._renderInput()}
            </div>
        )
    }
}